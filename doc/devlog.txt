Boneless Ice
SoftDev1 pd1
p01 - Ocean Getaways
DEVLOG

tiffanyC -- 2019-11-17 23:18
    - uploaded design.pdf, with description of overall project, database planning, page(s) layout, and more
    - each member wrote descriptions for the APIs they were assigned to

kiranV -- 2019-11-18 16:01
    - configured directories for css and template html files
    - wrote base Jinja template for all pages to extend
    - copied basic flask app configuring root route

kiranV -- 2019-11-18 17:49
    - generated coolors.co colorscheme with vacation vibes in mind (see comment in style.css)
    - added basic header, footer to root.html and expanded usage of bootstrap containers
    - created base for landing page out of a bootstrap jumbotron

tiffanyC -- 2019-11-18 22:20
    - created a currency.html page and its route for displaying currency exchange rates. The default exchange right now is USD to EUR.
    - wrote a function for a currency exchange rate database that has yet to be tested (the database itself has not been created). The function is meant to
      update an existing exchange rate between a base currency and a desired currency in the database or create an entry for it if the rate has not already been stored.
    - realized there was a more succinct query call for the database, so there are two commits for the function. Also realized there was a mistake in the original
      function so that part was removed

kiranV -- 2019-11-19 15:29
    - wrote geolocate() function to get information from http request from geolocating API
    * i haven't yet dealt with caching information!! still gotta do that
    - started route for processing the city input, calling geolocate() (will call more API functions soon)

tiffanyC -- 2019-11-19 18:00
    - wrote a csv file and dictionary for weather forecast names and their links
    * have yet to check if these links work

kiranV -- 2019-11-19 19:19
    - wrote function to get information from REST Countries API
    * again, haven't yet dealt with caching information (although it might not be necessary, no API keys here)

kiranV -- 2019-11-19 20:22
    - wrote function to get information from REST Countries API
    * again, haven't yet dealt with caching information (although it might not be necessary, no API keys here)
    - added Bootstrap Alerts to display flashed messages, taking advantage of the category argument to change the alert color

tiffanyC -- 2019-11-19 20:25
    - split addCurrency function into two functions
    - checkCurrency function written: it checks the currency exchange database to see if the base currency and destination currency pair already exists, and returns the rate and
      the timestamp of when it was last updated
    - updateCurrency function written: it either updates the timestamp and exchange rate of an existing pair in the database or adds a new row of the base currency, destination
      currency, rate, and timestamp
    - updated the currency.html page and currency route to reflect this change, but all of this has yet to be tested

kiranV -- 2019-11-19 22:08
    - uploaded updated design doc, containing updates to list of APIs to be implemented, additional section for bootstrap FEF, and other minor changes
    *** these updates encompass changes made by all group members!!

ayhamA -- 2019-11-20 8:12
    - created and added to requirements.txt
    - attempted to freeze in pip3 but ran into complications with venv
    - Kiran continued work on the requirements.txt

tiffanyC -- 2019-11-20 12:01
     - created database for currency, where new pairs of currencies are stored along with their timestamp
     - fixed currency functions
     - rewrote currency route to use the currency functions
     - currency route tested and it works

clementC -- 2019-11-20 21:47
     - created a weather route
     - takes the longitude and latitude from the session variable taken from the city route
     - route retrieves weather data from Dark Sky API and stores all the information in a dictionary

kiranV -- 2019-11-20 23:59
    - created a bootstrap navbar in root jinja template, made it look pretty damn nice if i do say so myself
    - made links on navbar change how they display depending on the state of the site: 'New Search' if search term exists already, disabled links when search term does not exist

kiranV -- 2019-11-21 13:34
    - Created a bootstrap-using template to replace the former currency.html template, using containers, rows, cols, and cards to nicely layout
    - Initialized a (currently inactive) form to calculate the value of a certain amount of exchanged currency

tiffanyC -- 2019-11-21 18:38
    - extended currency.html from root.html
    - root.html now has a block section for css script which can be overwritten by each of its child HTML pages
    - wrote the route for information, which retrieves information on a city from the Wikipedia API and displays it on the information.html page
    - added a temporary carousel imaging slideshow on the information.html page for displaying images of the city (to be done using the Unsplash API)

tiffanyC -- 2019-11-21 18:54
    - fixed bug in currency route
    - found a problem with the MapQuest API - might be too many API calls

tiffanyC -- 2019-11-21 19:40
    - resolved problem with MapQuest API - had something to due with faulty WiFi
    - fixed currency.html to display the currencies
    - changed order of navigation bar in root.html
    - made the landing page after search request be the information route

tiffanyC -- 2019-11-21 20:06
    - wrote currency route function to accommodate money conversions. When the client inputs a certain amount of money, the currency page refreshes to show to the monetary
      equivalent in the desired currency
    - fixed currency.html to display the money conversions

tiffanyC -- 2019-11-21 22:00
    - wrote weather.html using Clement's weather route and function
    - weather.html retrieves weather image from dictionary in app

tiffanyC -- 2019-11-21 22:35
    - units were added to weather page

tiffanyC -- 2019-11-21 23:13
    - Response to Egoless Programming:
      This excerpt was a very enlightening and thought-provoking read. It essentially discussed the importance of egoless programming, which is when programmers get into the
      habit of working together on a project, or at least, giving the code they've written to others for debugging. This is more than just a way of coding, but a mentality.
      Programmers must get rid of the mindset that the code they write is "theirs" and that any criticism of their code is a personal attack on their capabilities. The story
      about Bill G. was very interesting, and the fact that he responded to his many bugs with humor shows his light-hearted attitude and ability to take criticism effectively.
      Egoless programming seems to have many benefits: you become a better programmer, a more mindful team member, and your code has better adaptability, clarity, efficiency, and more.
    -What we can do:
      - We can start programming in pairs, such as having two people write the code for their parts of the project, and then have them swap codes to look for bugs. This way, both
        people will be well-versed in the two parts of the project, so that if one person is absent, the other has the knowledge.
      - We can implement a process where we help each other look for bugs before committing; this would reduce the number of times we push bad code and end up having to fix it later.
      - We should test everything, and have a partner test everything, before pushing.
      - We should have open communication; maybe have a discussion every night about where everyone is at with their part of the project and what issues they may have, so that we
        can work collectively to figure out the bugs.

kiranV -- 2019-11-22 06:50
    - Removed all references to our procured keys from app.py
    - Made all former references to key strings into references to a json file, keys.json, where an end user might be able to install their own procured keys
    - Created default keys.json file to be included in repo, with non-keys where sensitive information might end up ("YOUR_API_KEY_HERE")
    ** in the team discord server, there is a keys.json file, which can be downloaded to replace the default file and install keys belonging to boneless ice

kiranV -- 2019-11-22 23:49
    - Added error handling for low granularity results from the MapQuest API (typically arising from a user typo); error is displayed as a flashed message to the user
    - Corrected a bug regarding spaces in URLs from the wikipedia access function (might only be a problem locally on my computer)

kiranV -- 2019-11-23 08:21
    - Wrote instructions for key acquisition on MapQuest and Dark Sky APIs at the bottom of the README.md (issue from board)

chanC -- 2019-11-23 15:30
    - created a map route
    - takes map url from session (modified geoloc to store modified map url in session)
    - added zoom functionality (edits map url to resize/adjust zoom)

chanC -- 2019-11-23 16:15
    - fixed zoom to no longer allow users to zoom past the limits that mapquest has (would not display an image when out of bounds before)

tiffanyC -- 2019-11-23 18:00
    - added styling to some html files
    - fixed up map route and map.html to display the page better
    - fixed currency database function to update the data and timestamp from the Currency API if the data is a day old
    - fixed routes so that they can't be accessed unless there are session variables; clear session before new search
    - added comments to app.py

alnasserA -- 2019-11-24 14:02
    - added functionality to currency of user
    - updated ipstack key acquisition

alnasserA -- 2019-11-24 14:30
    - updated design doc to include change for api

tiffanyC -- 2019-11-25 08:09
    HOME STRETCH PLAN:
    - import images from Wikipedia API (Clement)
    - store city information (city name, country name, currency code, urls of images, Wikipedia info) (Kiran)
    - add more Bootstrap to HTML pages (in particular: weather.html) (Ayham)
    - update design doc (Clement + Tiffany)

kiranV -- 2019-11-25 15:30
    - Built out methods for database calls on place_info table; information now gets cached in travel.db
    - Reorganized code for map API functions, /city route calls, made code more readable

ayhamA -- 2019-11-25 22:00
    - Wikipedia thingies and images
    - tried to obtain Wikipedia images from Wikipedia API to match city information
    - certain cities had bad image urls that broke the code
        - made cities with bad image urls have default images after try and catch error didn't work

tiffanyC -- 2019-11-25 22:00
    - working on currency options for users to choose their base currency
        - using dropdown menu

kiranV -- 2019-11-25 23:50
    - restructured calls to wikipedia info and images to be contained within /city route
    - organized wikipedia functions into separate functions, made code a little bit cleaner
    - added info and image urls to place_info database
    - made city name in database match wikipedia title to avoid duplicate database entries due to typos

kiranV -- 2019-11-27 08:15
    - created first attempt at map caching structures, downloads file and loads it into a temporary file
    - this will likely be modified; does not allow for multiple users at once (?)
    - it's also currently ballooning the size of the database file

clementC -- 2019-11-27 08:30
    - working on site map and component map of design doc
    - site map reflects map html and the new navigation bar
    - design doc also reflects the APIs that we've scrapped and replaced with other APIs (such as Unsplash being replaced with Wikipedia API for images)

tiffanyC -- 2019-11-28 23:50
    - completed currency options. Users can now choose a base currency and make conversions with it. Their chosen currency will become the updated session variable

kiranV -- 2019-11-29 10:18
    - restructured map caching to put the images into separate files
    - this fixes problem of gigantic database filesize, and the problem of multiple simultaneous users
    - untested is the deletion of files

tiffanyC -- 2019-12-03 18:09
    - made flashed message for ambiguous city name that can't be found on Wikipedia API
    - the currency conversion inputs and outputs are stored in session; they will remain even if user goes to another page and comes back

ayhamA -- 2019-12-03 18:59
    - created and uploaded team flag into doc directory

tiffanyC -- 2019-12-03 20:40
    - updated design doc
      - includes up-to-date list of APIs that we are using along with their descriptions
      - gave examples of all three databases used in the back end
      - has the updated component and site map (Ayham + Clement)
    - updated README.md
      - includes up-to-date roles of every member
      - hyperlinks to all API cards, descriptions of all APIs used
      - updated the overview of the project
